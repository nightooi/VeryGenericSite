@page
@model MarioHabo.Models.WidePanoramaImageModel;
@{
    int j = 0; 
    if(Model is not null)
    {
        @foreach(var i in Model.RequestImages)
        {
            <div class="card text-white mb-lg-3 mb-md-2">
                <img src="@i" class="card-img" style="width:100%; height:25em; object-fit: cover;" />
                <div class="card-img-overlay m-0 p-0">
                    <div class="flex-column m-0 p-0 d-flex h-100 justify-content-end" style="background:
                      linear-gradient(rgba(1,1,1,0.1) 0 70%, rgba(1,1,1,1))">
                        @if(Model.ArticleBundle is not null && j == Model.ArticleBundle[j].ImageTied)
                        {
                            <h3 class="card-title">@(@Model.ArticleBundle[j].Header ?? "" )</h3>
                            if(Model.ArticleBundle[j].SubHeader is not null)
                            {
                                <h5>@Model.ArticleBundle[j].SubHeader</h5>
                            }
                            <p class="card-text p-2">@(Model.ArticleBundle[j].Article ??  "todo: move this out into a model of its own, turn the lower stuff into cards, add the watermark in one corner, add buttons for redirect to the lower articles, add maps on images for redirects to articles, find a way to add a row when in pc view, and a to space the cards in planly laterally when in mobile.") </p>
                        }
                    </div>
                    @if(Model.OnHoverArticleBundle is not null)
                    {
                        @if(Model.OnHoverArticleBundle.Length > j && Model.OnHoverArticleBundle[j].ImageTied == j)
                        {
                            <div class="d-flex w-50 h-100" 
                            style="background: linear-gradient(rgba(1,1,1, .5) 0 40%, rgba(1,1,1,1))">
                                <h3>@(Model.OnHoverArticleBundle[j].Header ?? "")</h3>
                                <h5>@(Model.OnHoverArticleBundle[j].SubHeader ?? "")</h5>
                                <p>@(Model.OnHoverArticleBundle[j].Article ?? "")</p>
                            </div>
                        }
                    }
                </div>
            </div>
            j++;
        }
    }
}
