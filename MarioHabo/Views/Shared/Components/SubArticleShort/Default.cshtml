@using MarioHabo.Models;
@using Microsoft.AspNetCore;
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc;
@using System.Text

@model MarioHabo.Models.SubArticleShortModel

<div clsas="container w-75 h-25">
    <div class="flex-column bg-white bg-opacity-75 me-5 ms-5">
        <div class="flex-row justify-self-center"> 
            <h3 class="text-center">@Model.Article[0] Todo: add overlays to all images, convert some to cards</h3>
            <h4 class="text-center"> Add some more cards and do some javascript magic to make these dispappear and reappear rearranged </h4>
            <p class="ms-5"> in a better world there would be more cards so they'd have to be filtered/looped, in the individuall cards below this add some sort 
                of a overlay on hover/tap which would redirect to something... system related, either to the reference page of this individual job or like request worker page, 
                Idea: worker page showcase some of the things the current worker has done, pulls resources from references page, pics etc  </p>
        </div>

        <div class="d-flex justify-content-around bg-white bg-opacity-50">
            <div class="row mb-3">
                @{
                    int a;
                    int k = 0;
                    if(Model.ImgCaption != null)
                    {

                        a = Model.ImgCaption[0].ImgIndex ?? -1;

                    }
                    else
                    {
                        a = -1; 
                    }
                    for(int i=0; i<Model.ImgPaths.Length; i++)
                    {
                        if (a >= 0 && (i == a))
                        {
                            <div class="col d-flex bg-white bg-opacity-75 me-3 ms-3">

                                    @if (Model.ImgCaption[k].SubArticle != null)
                                    {
                                        @if (i % 4 == 0)
                                        {
                                            <div class="flex-column border rounded shadow me-3 ms-3 mt-3">
                                                <figure rightBound="true" hastext="true" subtext="@Model.ImgCaption[k].ImgCaption"  
                                                index="@Model.ImgCaption[k].ImgIndex" src="@Model.ImgPaths">                
                                                </figure>
                                                <p>@Model.ImgCaption[k].SubArticle</p>                                              
                                            </div>
                                        }
                                        else if( i%4 == 1)
                                        {
                                           <div class="flex-column">
                                                <p>@Model.ImgCaption[k].SubArticle</p>
                                                <figure class="figure">
                                                    <img src="@Model.ImgPaths[(int)Model.ImgCaption[k].ImgIndex]" class="img-fluid"/>
                                                </figure>                                                                           
                                            </div>
                                        }
                                        else if(i % 4 == 2)
                                        {
                                            <gsfigure
                                            gs-src="@Model.ImgPaths[k]"
                                            gs-caption="@Model.ImgCaption[k].ImgCaption"
                                            gs-top="true"                                
                                            gs-right="true"                              
                                            gs-capupper="true"                          
                                            gs-text-end="true"
                                            gs-article ="@Model.ImgCaption[k].SubArticle"></gsfigure>               
                                        }
                                        else if(i%4 == 3)
                                        {
                                           
                                            <gsfigure
                                            gs-src="@Model.ImgPaths[k]"
                                            gs-caption="@Model.ImgCaption[k].ImgCaption"
                                            gs-article="@Model.ImgCaption[k].SubArticle"
                                            gs-top=false
                                            gs-right=false
                                            gs-capupper=false 
                                            gs-text-start=true></gsfigure>
                                        }
                                    }
                                </div>
                            k = (k+1 < Model.ImgCaption.Length) ? ++k : k;
                            a = ((int)Model.ImgCaption[k].ImgIndex < Model.ImgPaths.Length) ? (int)Model.ImgCaption[k].ImgIndex : a;
                        }
                        else
                        {
                            <div class="col bg-white bg-opacity-75 me-3 ms-3">
                               <div class="flex-row mt-3">
                                @*the float variable needs to be rethought. again context dependent on
                                        where the image ends up living. Also the text alignment in the 
                                        paragraph too.*@
                                @*ill need some extra logic too set the propper article too the image*@
                                    <img src="@Model.ImgPaths[i]" alt="..OOps" class="rounded-2 float-end w-50 h-50 img-fluid ms-2"/>
                                    <p>@Model.Article[1]</p>
                                </div>
                            </div>
                        }
                   }
                 }
            </div>
        </div>
    </div>
</div>
